name: Test, build and deploy

on:
  pull_request:
    branches:
      - main
      - dev
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install poetry

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version-file: "pyproject.toml"
          cache: "poetry"

      - name: Install python dependencies
        run: poetry install

      # - name: Check typing with mypy
      # run: poetry run mypy --install-types --non-interactive src

      - name: Check code formatting with black
        run: poetry run black --check .

      - name: Run isort
        run: poetry run isort --check-only src

      # - name: PEP8
      #   run: poetry run flake8 .

      - name: Run tests
        run: poetry run pytest

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Populate .env
        run: |
          echo 'USERS=${{ secrets.USERS }}' >> .env
          echo 'MODEL_SHA=`git rev-list -n1 HEAD -- src/health_misinfo_shared`' >> .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: fullfact/raphael-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=min

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run ansible playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: ./ansible/playbooks/docker_deploy.yaml
          key: ${{ secrets.DEPLOY_KEY }}
          options: |
            --inventory ./ansible/inventories/hosts
            -e docker_username=${{ secrets.DOCKER_USERNAME }}
            -e docker_token=${{ secrets.DOCKER_TOKEN }}
